<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>1</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>482</x>
      <y>51</y>
      <w>37</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
VisualCompatible

--
provideVisual(ChartPanel c); void
setFactoryCommunicator(factoryCommunicator f); void
/this method is so that when after constructing in the main
class we can make it so the GUI has a reference
to a factory Communicator.  It ensures one
or the other need not be made first, rather
any order</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>484</x>
      <y>80</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
GUI
--
...
--
...

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>494</x>
      <y>68</y>
      <w>3</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>194</y>
      <w>82</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
OperationFacade
--


--
setTableManager(TableManager manager); void
LaunchMLForecast(); String 
LaunchStatTest(); String
LaunchNHPIComparison(); String
addRegion(String location, String date1, String date2); void
addTimeSeries(String Date1, String Date2);
resetRegions(); void
resetTimeSeries(); void

Responsibilitiy 
A facade responsbility for calling the appropriate classes
neccessary to successfully do either a Machine learning forecast,
a statistical test or a NHPI comparison.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>452</x>
      <y>98</y>
      <w>44</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;430.0;10.0;380.0;420.0;380.0;420.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>449</x>
      <y>251</y>
      <w>26</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
MLForecast
--
...
--
provideTables(List&lt;DataTable&gt; l); void
execute(); String
clearTables(); void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>458</x>
      <y>245</y>
      <w>69</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>670.0;60.0;670.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>386</x>
      <y>356</y>
      <w>26</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
NHPIDataTable (implements Iterable??)
--
String location;
int startYear;
int endYear;
int startMonth;
int endMonth;
List&lt;double&gt; table;
--
#DataTable(); 
#addValue(double d); void
#getTable(); List&lt;int&gt; 
#getStart(); String
#getEnd(); String
#getLocation(); String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>393</x>
      <y>383</y>
      <w>50</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
DatabaseAdapterIMPL

--
getFilledDataTable(String date1, String date2, String location)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>473</x>
      <y>221</y>
      <w>31</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Operation
--
provideTables(List&lt;DataTable&gt; l); void
execute(); String
clearTables(); void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>482</x>
      <y>241</y>
      <w>3</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>394</x>
      <y>418</y>
      <w>14</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>MySQLDatabase</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>477</x>
      <y>251</y>
      <w>34</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
StatTest
--
List&lt;DataTable&gt; l;
...
--
provideTables(List&lt;DataTable&gt; l); void
execute(); String
clearTables(); void
fromListToArray(List&lt;Double&gt; l); double[]
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>513</x>
      <y>251</y>
      <w>35</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
CompareNHPI
--
...
--
provideTables(List&lt;DataTable&gt; l); void
execute(); String
clearTables(); void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>486</x>
      <y>245</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>307</x>
      <y>288</y>
      <w>290</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>Model Component</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>307</x>
      <y>30</y>
      <w>265</w>
      <h>93</h>
    </coordinates>
    <panel_attributes>View Component</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>407</x>
      <y>317</y>
      <w>54</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
TableManager
{Some Properties}
--
/int numOfTables;
List&lt;String&gt; locations;
List&lt;String&gt; dates;
list&lt;DataTable&gt; l;
Adapter a;
--
#unSubscribe(); void
#requestDataTable(String date1, String date2, String location); List&lt;DataTable&gt;
+notifySubscribers(); void
+addSubscriber(); void
addRegion(String location); void
addTimeSeries(String date1, String date2); void
getTables(); List&lt;DataTable&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>585</x>
      <y>206</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
VisualHandler or something
{Some Properties}
--
-id: Long
_-ClassAttribute: Long_
--
#Operation(i: int): int
/+AbstractOperation()/
--
Responsibilities
-- Resp1
*-- Resp2*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>219</y>
      <w>20</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;180.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>328</x>
      <y>356</y>
      <w>49</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
DataTable

--
+getTable(); List&lt;double&gt; 
+getStartYear(); int
+getEndYear(); int
getStartMonth(); int
getEndMonth(); int
+addValue(double d); void
+getLocation(); String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>458</x>
      <y>387</y>
      <w>51</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Adapter
--
getFilledDataTable(String date1, String date2, Stinrg location); DataTable</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>442</x>
      <y>390</y>
      <w>18</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>344</x>
      <y>322</y>
      <w>47</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;
NHPIPublisher
{Some Properties}
--
#unSubscribe(TableManagerSubscriber s); void
getTables(); List&lt;DataTables&gt;
+notifySubscribers(); void
+addSubscriber(); void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>359</x>
      <y>347</y>
      <w>61</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>590.0;10.0;590.0;30.0;10.0;30.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>424</x>
      <y>347</y>
      <w>39</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>370.0;400.0;370.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>352</x>
      <y>378</y>
      <w>43</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;410.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>376</x>
      <y>363</y>
      <w>12</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>585</x>
      <y>229</y>
      <w>21</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
NHPILogicFacade

--
-id: Long
_-ClassAttribute: Long_
--
#Operation(i: int): int
/+AbstractOperation()/
--
Responsibilities
-- Resp1
*-- Resp2*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>358</x>
      <y>34</y>
      <w>26</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface or Abstract Class&gt;&gt;
graphCreator

--
...
--
create(List&lt;Integer&gt; l, int d1, int d2); ApplicationFrame
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>331</y>
      <w>19</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>426</x>
      <y>66</y>
      <w>31</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
VisualUpdater
--
...
VisualCreator c;
--
determineIfMonthBased(String d1, String d2);
Update(List&lt;NHPIDataTable t); void
c.create(...)
provideVisual(v)
}
setCreatorLine(){
this.c = new LineGraph
}
setCreatorWater(){
this.c = new WaterGraph
}
setMonthly();void
setYearly();void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>426</x>
      <y>40</y>
      <w>32</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Stereotype&gt;&gt;
TableManagerSubscriber

--
Update(List&lt;Integer&gt; t, string d1, string d2); void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>436</x>
      <y>59</y>
      <w>3</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>286</x>
      <y>30</y>
      <w>15</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>when visualizations
are getting made
they loop through
the list of dataTables
given to them and
create points for
each dataTable
(This means the 
operations will 
dictate how many tables
are made and all the
visualizations need
to do is use the tables
that the operations 
needed
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>414</x>
      <y>44</y>
      <w>14</w>
      <h>275</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0;10.0;2730.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>307</x>
      <y>130</y>
      <w>265</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>Controller Componennt</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>482</x>
      <y>41</y>
      <w>41</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;.&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>360.0;180.0;390.0;180.0;390.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>352</x>
      <y>21</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Design visualizations
after the factory
method possibly
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>383</x>
      <y>44</y>
      <w>45</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>430.0;310.0;230.0;310.0;230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>52</y>
      <w>16</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;140.0;60.0;140.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>375</x>
      <y>61</y>
      <w>28</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
LineGraphCreator
--
create(List&lt;Integer&gt; l, int d1, int d2);
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>349</x>
      <y>57</y>
      <w>22</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>576</x>
      <y>75</y>
      <w>19</w>
      <h>17</h>
    </coordinates>
    <panel_attributes>ToDo list

confirm which visuals will
be used

Create more sophisticated
design for visuals

Iron out operation facade

Show exact type of relation
ships between classes


extra
optimize coupling
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>585</x>
      <y>200</y>
      <w>21</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>Unused classes</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>505</x>
      <y>223</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Facade Pattern present
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>473</x>
      <y>337</y>
      <w>17</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Adapter Pattern Present
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>342</x>
      <y>61</y>
      <w>32</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
BarGraphCreator
--
create(List&lt;Integer&gt; l, int d1, int d2);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>236</y>
      <w>142</w>
      <h>122</h>
    </coordinates>
    <panel_attributes>lt=-
m1=
m2=1..*</panel_attributes>
    <additional_attributes>1400.0;10.0;20.0;10.0;10.0;1200.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>386</x>
      <y>32</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>do facotry method pattern here
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>319</x>
      <y>33</y>
      <w>20</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>
org.jfree.ui.Application frame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>282</x>
      <y>75</y>
      <w>11</w>
      <h>5</h>
    </coordinates>
    <panel_attributes>org.jfree.chart.*;
org.jfree.data*;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>517</x>
      <y>194</y>
      <w>51</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
OpFacadeInter
--
LaunchMLForecast(); String 
LaunchStatTest(); String
LaunchNHPIComparison(); String

addRegion(String location, String date1, String date2); void
addTimeSeries(String Date1, String Date2);
resetRegions(); void
resetTimeSeries(); void
LaunchOperation(); void

have launch operation be setters
for the specific operation class instance
used and then have it call</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>505</x>
      <y>212</y>
      <w>27</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>250.0;10.0;250.0;100.0;10.0;100.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>327</x>
      <y>38</y>
      <w>33</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>310.0;40.0;10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>44</y>
      <w>13</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
ApplicationFrame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>327</x>
      <y>38</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>316</x>
      <y>58</y>
      <w>9</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
LineGraph 

--
LineGraph()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>434</x>
      <y>19</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>instead of the coupling to 
all the creators
to implement the 
ocp polymorphism tehcnique
we could just couple the 
Gui to visual and have visual
updater have setters to set
its own visual creator,
lowers coupling as a result
shouldn't break ocp???
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>286</x>
      <y>62</y>
      <w>16</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>show graphs when 
generated immediately
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>274</x>
      <y>91</y>
      <w>23</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>line graph and waterfall graph
bg=orange
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>522</x>
      <y>91</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>dates in the format
yyyy-mm
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>410</y>
      <w>3</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>459</x>
      <y>31</y>
      <w>24</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
factoryCommunicator
--
setCreatorLine(); void
setCreatorWater(); void
setClient(VisualCompatible v); void
setMonthly(); void
setYearly(); void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>49</y>
      <w>17</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>150.0;10.0;150.0;330.0;10.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>276</x>
      <y>21</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>Note..
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>337</x>
      <y>44</y>
      <w>14</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>imported 
classes from 
librariers
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>522</x>
      <y>81</y>
      <w>14</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>Individual date class 
perhaps,
see if not doing this
violates solid later
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>323</x>
      <y>207</y>
      <w>19</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>may need dedicated
class to deal with 
multiple time series
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>138</y>
      <w>32</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Stereotype&gt;&gt;
TableManagerSubscriber

--
Update(List&lt;Integer&gt; t, string d1, string d2); void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>562</x>
      <y>118</y>
      <w>11</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>141</y>
      <w>38</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Controller
{Some Properties}
--
setMLForecast(); void 
setStatTest(); void
setNHPIComparison(); void
launchOperation(); String
addRegion(String location, String date1, String date2); void
addTimeSeries(String Date1, String Date2);
resetRegions(); void
resetTimeSeries(); void
LaunchOperation(); void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>165</y>
      <w>39</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
ControllerIMPL

--
setMLForecast(); void 
setStatTest(); void
setNHPIComparison(); void
launchOperation(); String
addRegion(String location, String date1, String date2); void
addTimeSeries(String Date1, String Date2);
resetRegions(); void
resetTimeSeries(); void
LaunchOperation(); void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>428</x>
      <y>293</y>
      <w>44</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
TableRetriever
--

addRegion(String location); void
addTimeSeries(String date1, String date2); void
getTables(); List&lt;DataTable&gt;
reset(); void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>447</x>
      <y>311</y>
      <w>3</w>
      <h>8</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>451</x>
      <y>161</y>
      <w>3</w>
      <h>6</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>172</y>
      <w>65</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;10.0;630.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>428</x>
      <y>168</y>
      <w>8</w>
      <h>127</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0;10.0;1250.0</additional_attributes>
  </element>
</diagram>
